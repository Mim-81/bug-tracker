name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unit-tests-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache-dependency-path: bugtracker-backend/go.sum

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report/v2@latest # Install go-junit-report for test result formatting

      - name: Execute Backend Unit tests
        working-directory: ./bugtracker-backend
        run: |
          go test -v ./... 2>&1 | go-junit-report > test-results.xml  
      - name: Publish Backend Test Results
        uses: dorny/test-reporter@v1 # Adjust version of action to have latest features
        if: always()
        with:
          name: Backend Unit Tests Report
          path: bugtracker-backend/test-results.xml
          reporter: junit-report

  unit-tests-frontend:
    needs: unit-tests-backend # Ensure backend tests run first
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: bugtracker-frontend/package-lock.json

      - name: Execute Frontend Unit tests
        working-directory: ./bugtracker-frontend
        run: |
          npm ci
          npm test

      - name: Publish Frontend Test Results
        uses: dorny/test-reporter@v1 # Adjust version of action to have latest features
        if: always()
        
        with:
          name: frontend Unit Tests Report 
          path: bugtracker-frontend/test-results.xml
          reporter: jest-junit
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.9'
      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt
      # - name: Run backend unit tests
      #   run: |
      #     pytest tests/backend